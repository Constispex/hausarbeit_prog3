application {
    mainClass = "${group}"
    mainClassName = "${group}.Main"

}


task fatJar(type: Jar) {
    manifest {
        attributes(
                'Main-Class': application.mainClass

        )

    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from sourceSets.main.output

    from {
        configurations.runtimeClasspath.getFiles().collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveFileName.set('Server-1.0.jar')
}


ext {
    log4jVersion = '2.17.2'
    jacksonVersion = '2.14.2'
}

dependencies {
    implementation "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    implementation "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"
    implementation "org.glassfish.jersey.containers:jersey-container-grizzly2-http:${jerseyVersion}"
    implementation "org.glassfish.jaxb:jaxb-runtime:4.0.0"
    implementation "javax.ws.rs:javax.ws.rs-api:2.1.1"
    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '3.0.3'
    implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: jacksonVersion
    implementation "org.glassfish.grizzly:grizzly-http-server:${grizzlyVersion}"
    implementation "org.glassfish.grizzly:grizzly-websockets:${grizzlyVersion}"

    implementation 'org.json:json:20230227'

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation group: 'com.fasterxml.jackson.jaxrs', name: 'jackson-jaxrs-json-provider', version: jacksonVersion

    implementation "org.mariadb.jdbc:mariadb-java-client:${jdbcVersion}"

    implementation project(':Common')
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"

}
